---
- hosts: [mesos_primaries]
  sudo: True
  pre_tasks:
    - name: Install HAProxy (RedHat)
      yum: pkg=haproxy state=present
      when: ansible_os_family == "RedHat"
    - name: Install HAProxy (Ubuntu)
      apt: pkg=haproxy state=present
      when: ansible_os_family == "Debian"
    - name: Sets haproxy to enabled (Ubuntu)
      lineinfile: dest=/etc/default/haproxy regexp="^ENABLED" line="ENABLED=1"
      when: ansible_os_family == "Debian"
    

  roles:
    - { role: 'ansible-docker', tags: ['docker'] }
    - { role: 'ansible-java8', tags: ['runtimes', 'java'], when: ansible_os_family == 'Debian' }
    - { role: 'ansible-zookeeper', zookeeper_hosts: "{{ groups.mesos_primaries}}", tags: ['zookeeper'] }
    - { role: 'ansible-mesos', mesos_containerizers: "docker,mesos", mesos_quorum: "1", zookeeper_hostnames: "{{ groups.mesos_primaries | join(':' + zookeeper_client_port + ',')  }}:{{ zookeeper_client_port  }}", mesos_install_mode: 'master-slave', mesos_cluster_name: 'bva_mesos', tags: ['mesos', 'platforms'] }
    - { role: 'ansible-marathon', zookeeper_hostnames: "{{ groups.mesos_primaries | join(':' + zookeeper_client_port + ',')  }}:{{ zookeeper_client_port  }}",  tags: ['mesos-tools'] }
    #- { role: 'ansible-nodejs',
        # nodejs_version: "0.10.25",
        # nodejs_global_packages: [ 'express' ],
        # nodejs_path: '/usr/',
        # tags: ['runtimes', 'nodejs']}
    #- { role: 'ansible-chronos', chronos_runtime_master: "zk://{{ mesos_hostname }}:{{ zookeeper_client_port }}/mesos",chronos_runtime_zookeeper_hosts: "{{ groups.mesos_primaries | join(':' + zookeeper_client_port + ',')  }}:{{ zookeeper_client_port  }}",chronos_version: "2.4.0", tags: ['mesos-tools'] }
    #- { role: 'ansible-mesos-dns', tags: ['mesos_dns']}
    - { role: 'ansible-consul', consul_client_address: "0.0.0.0",  consul_version: "0.5.2", consul_datacenter: "sea", consul_is_server: true, consul_servers: "{{ groups.mesos_primaries  }}", consul_is_ui: true, tags: ['consul'] }
